/* Напишите функцию, которая принимает на вход целочисленную матрицу MM (другими словами, просто двумерный целочисленный массив) размера rows \times colsrows×cols, и возвращает
транспонированную матрицу M^TM
  (тоже двумерный целочисленный массив) размера cols \times rowscols×rows. Если в MM на пересечении ii-ой строки и jj-ого столбца стояло число xx, то на пересечении  jj-ой строки
   и ii-ого столбца в матрице M^TM
  тоже будет стоять число xx, или другими словами M^T[j][i] = M[i][j]M
 [j][i]=M[i][j].

Обратите внимание, что вам неизвестно, каким именно способом выделялась память для массива MM. Выделять память под массив M^TM можете любым удобным вам способом. Изменять исходную матрицу нельзя.

Требования к реализации: при выполнении этого задания вы можете определять любые вспомогательные функции. Вводить или выводить что-либо не нужно. Реализовывать функцию main не нужно.*/

#include <cstdlib>

int ** transpose(const int * const * m, unsigned rows, unsigned cols)
{
    int ** mt = new int * [cols];
    mt[0] = new int [cols * rows];
    for (int i = 1; i != cols; i++)
        mt[i] = mt[i - 1] + rows;
    for (int i = 0; i != cols; i++)
        for (int j = 0; j != rows; j++)
            mt[i][j] = m[j][i];
    return mt;
}
