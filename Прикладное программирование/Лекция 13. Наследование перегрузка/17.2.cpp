# include <stdio.h>

class CBase                        //начало определения базового класса
{
private:
    int pri;                 //объявление закрытой члена(переменной pri
protected:
    int pro;             //объявление защищенной члена(переменной pro
public:
    int pub;          //объявление общедоступной члена(переменной pub
};
                                  //конец определения базового класса
class C1 : CBase
//начало определения класса C1 наследника класса CBase
{
public:
    void set(int i);            //прототип общедоступного метода set
    void prn();                 //прототип общедоступного метода prn
};

void C1::set(int i)             //общедоступный метод set класса С1
{                    /*pri = i; (член(переменная базового класса pri
         недоступна нигде, кроме класса CBase*/
    pro = i;
    pub = i;
}

void C1::prn()                  //общедоступный метод prn класса С1
{
    printf("Class C1 (без спецификатора):\n");
    printf("pri   недоступна.\npro = %d.\npub = %d.\n",
    pro, pub);
}

class C2 : public CBase
//начало определения класса C2 наследника класса CBase

{
public:
    void set(int i);              //прототип общедоступного метода set
    void prn();};                 //прототип общедоступного метода prn

    void C2::set(int i)
    {
        //pri = i; — член(переменная pri недоступна нигде, кроме класса CBase
        pro = i;
        pub = i;
    }
    void C2::prn()
    {
        printf("Class C2 (спецификатор  public):\n");
        printf("pri   недоступна.\npro = %d.\npub = %d.\n", ro, pub);
    }

class C3 : protected CBase
//начало определения класса C3 наследника класса CBase
{
public:
    void set(int i);
    void prn();};
    void C3::set(int i)
    {
        //pri = i; — член(переменная pri недоступна нигде, кроме класса CBase
        pro = i;
        pub = i;
    }
    void C3::prn()
    {
        printf("Class C3 (спцификатор   protected):\n");
        printf("pri   недоступна.\npro = %d.\npub = %d.\n", pro, pub);
    }

class C4 : private CBase
//начало определения класса C4 наследника класса CBase
{
public:
    void set(int i);
    void prn();
};

void C4::set(int i)
{
    //pri = i; — член(переменная pri недоступна нигде, кроме класса CBase
    pro = i;
    pub = i;
}

void C4::prn()
{
    printf("Class C4 (спецификатор   private):\n");
    printf("pri   недоступна.\npro = %d.\npub = %d.\n", pro, pub);
}

int main() {
    CBase b1;             /*b1.pri = 0; — член(переменная pri объекта b1
    недоступна нигде, кроме объекта b1 класса CBase*/

    /*b1.pro = 0; — член(переменная pro объекта b1 недоступна нигде,
    кроме объекта b1 класса CBase и объектов(наследников
    класса CBase*/

    b1.pub = 0;                  //общедоступная член(переменная объекта b1
    C1 c1;
    /*c1.pri = 0; — член(переменная pri объекта c1 недоступна нигде, кроме объекта c1 класса CBase*/
    /*c1.pro = 0; — член(переменная pro объекта c1 недоступна нигде, кроме объекта c1 класса C1*/
    /*c1.pub = 0; — член(переменная pub объекта c1 недоступна нигде, кроме объекта c1 класса C1*/
    c1.set(1);
    c1.prn();
    C2 c2;                  /*c2.pri = 0; — член(переменная pri объекта c2 недоступна нигде, кроме объекта c2 класса CBase*/
    /*c2.pro = 0; — член(переменная prо объекта c2 недоступна нигде, кроме объекта c2 класса CBase и объектов(наследников класса С2*/
    c2.pub = 0;
    c2.set(10);
    c2.pub = 9;
    c2.prn();
    C3 c3;
    /*c3.pri = 0; — член(переменная pri объекта с3 недоступна нигде, кроме объекта с3 класса CBase*/
    /*c3.pro = 0; — член(переменная pro объекта c3 недоступна нигде, кроме объекта c3 класса C3 и наследников объекта c3*/
    /*c3.pub = 0; — член(переменная pub объекта c3 недоступна нигде, кроме объекта c3 класса C3 и наследников объекта c3*/
    c3.set(5);
    c3.prn();
    C4 c4;
    /*c4.pri = 0; — член(переменная pri объекта c4 недоступна нигде, кроме объекта c4 класса CBase*/
    /*c4.pro = 0; — член(переменная pro объекта c4 недоступна нигде, кроме объекта c4 класса C4*/
    /*c4.pub = 0; — член(переменная pub объекта c4 недоступна нигде, кроме объекта c4 класса C4*/
    c4.set(15);
    c4.prn();
    return 0;
}