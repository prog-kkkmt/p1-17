МДК.01.02 "Прикладное программирование"
ЛЗ 6. Решение задач по теме "Ссылки"


[1] Упражнения раздела 2.5
1) Упражнение 2.24. Какие из следующих определений (если они есть) недопустимы? Почему? Как их исправить?
(a) int ival = 1.01;
(b) int &rvall = 1.01;
(с) int &rval2 = ival;
(d) const int &rval3 = 1;

Ответ:
а (Произойдёт потеря информации, так как дробная часть отбросится, решением будет поменять тип переменной
на float или double)

b (Компилятор выдаст ошибку, так как здесь ссылка иницилизируется lvalue - выражением. Решением будет 
сделать ссылку константной)



2) Упражнение 2.25. Какие из следующих присвоений (если они есть) являются недопустимыми 
(с учетом предыдущих определений)? Если таковые есть, объясните, почему.
(а) rva12 = 3.14159;
(b) rva12 = rva13;
(с) ival = rval3;
(d) rval3 = ival;

Ответ: 
d (Потому что rval3 определялась как ссылка на константное значение)



3) Упражнение 2.26. В чем разница между определениями (а) и присвоениями (Ь)? 
Какие из них (если есть) недопустимы?
(a) int ival = 0;        (b) ival = ri;
    const int &ri = 0;	     ri = ival;

Ответ:
Присвоние - запись в выделенную область памяти какого-то значения.
Определение - выдление области в памяти для хранения данных переменной определенного типа.

Ошибка в b (Присвоение ri = ival недопустипо, потому что ri определена как константная ссылка, т.е. 
изменение её значения невозможно)


4) Упражнение 2.27. Что отобразит на экране следующий код?
int i, &ri = i; i = 5; ri = 10;
std::cout << i << " " << ri << std::endl;

Ответ:
10 10



[1] Упражнения раздела 4.2.3
5) Упражнение 4.15. Укажите принципиальные различия между указателями и ссылками.

Ответ:
1. Ссылка не может быть неициальзированной, в отличие от указателя
2. Ссылку нельзя переинициализировать, в отличие от указателя
3. У ссылки не может быть нулевого значения, в отличие от указателя
4. Нельзя получить адресс ссылки, но можно получить адрес указателя
5. Нельзя получить ссылку на ссылку, но возможно создать указатель на указатель
6. Нельзя создавать массив ссылок, но возможно создание массива указателей
7. Для ссылок нет арифметики



[1] Упражнения раздела 7.2.2
6) Упражнение 7.7. Объясните различие между параметрами в следующих двух объявлениях.
void f(Т);
void f(Т&);

Ответ:
void f(T) - параметром будет копия значения переменной
void f(Т&) - параметр будет ссылочным



7) Упражнение 7.8. Приведите пример случая, когда параметр должен быть ссылочным.
Приведите пример случая, когда параметр не должен быть ссылочным.

Ответ:
При необходимости получить только значение параметра, он не должен быть ссылочным.

int sum(int x, int y)
{
	return (x + y);
}

Если объект слишком большой или копирование объекта невозможно, а также при необходимоти изменить 
значение параметра, он должен быть ссылочным.

void f(int &x, int &y) 
{ 
	int temp = x; 
	x = y; 
	y = temp;
}



8) Упражнение 7.10. Следующая функция хоть и вполне допустима, но менее полезна,
чем могла бы быть. Выявите и устраните ограничения.
bool test(string& s) { return s.empty(); } Написать main для аргументации своего решения

Ответ:
Сделать параметр константным



9) Упражнение 7.11. Когда ссылочные параметры должны быть константными? 
Какие проблемы могут возникнуть, если параметр является обычной ссылкой, 
а какие — если он является константной ссылкой?

Ответ:
Параметры, которые не изменяют значение соответсвующего аргумента должны быть 
константными ссылками. Простые, неконстантные, ссылочные параметры менее гибки. 
Такие параметры не могут быть инициализированы константными объектами или аргументами,
которые являются литералами или выражениями, в результате вычисления которых получаютя
r-значения.

Выполнила: Фролова Л. А,