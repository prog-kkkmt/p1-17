/******************************************************************************/
/***          Generated by IBExpert 2011.04.06 07.06.2020 10:04:08          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1251;

CREATE DATABASE 'C:\Db\Support\Step1\Step1.fdb'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 8192
DEFAULT CHARACTER SET WIN1251 COLLATION WIN1251;



/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/

CREATE DOMAIN T_FM AS
VARCHAR(30);

CREATE DOMAIN T_ID AS
INTEGER;

CREATE DOMAIN T_IM AS
VARCHAR(30);

CREATE DOMAIN T_OT AS
VARCHAR(30);



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_ITMAN_ID;
SET GENERATOR GEN_ITMAN_ID TO 2;



SET TERM ^ ; 



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE PROCEDURE ITMAN_DEL (
    ID INTEGER /* TYPE OF COLUMN ITMAN.ID */)
AS
BEGIN
  EXIT;
END^





CREATE PROCEDURE ITMAN_INS (
    FM VARCHAR(30) /* TYPE OF COLUMN ITMAN.FM */,
    IM VARCHAR(30) /* TYPE OF COLUMN ITMAN.IM */,
    OT VARCHAR(30) /* TYPE OF COLUMN ITMAN.OT */)
RETURNS (
    ID INTEGER /* TYPE OF COLUMN ITMAN.ID */)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE ITMAN_UPD (
    ID INTEGER /* TYPE OF COLUMN ITMAN.ID */,
    FM VARCHAR(30) /* TYPE OF COLUMN ITMAN.FM */,
    IM VARCHAR(30) /* TYPE OF COLUMN ITMAN.IM */,
    OT VARCHAR(30) /* TYPE OF COLUMN ITMAN.OT */)
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE ITMAN (
    ID  T_ID NOT NULL,
    FM  T_FM,
    IM  T_IM,
    OT  T_OT
);



/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE ITMAN ADD CONSTRAINT PK_ITMAN PRIMARY KEY (ID);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: ITMAN_BI0 */
CREATE TRIGGER ITMAN_BI0 FOR ITMAN
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.id is null) then
    new.id = next value for gen_ITMAN_id;
end
^

SET TERM ; ^



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE ITMAN_DEL (
    ID TYPE OF COLUMN ITMAN.ID)
AS
begin
  delete from ITMAN
  where (id = :id);
end^


ALTER PROCEDURE ITMAN_INS (
    FM TYPE OF COLUMN ITMAN.FM,
    IM TYPE OF COLUMN ITMAN.IM,
    OT TYPE OF COLUMN ITMAN.OT)
RETURNS (
    ID TYPE OF COLUMN ITMAN.ID)
AS
begin
  insert into ITMAN (
    fm, im, ot)
  values (
    :fm, :im, :ot)
  returning ITMAN.id into :id;
  suspend;
end^


ALTER PROCEDURE ITMAN_UPD (
    ID TYPE OF COLUMN ITMAN.ID,
    FM TYPE OF COLUMN ITMAN.FM,
    IM TYPE OF COLUMN ITMAN.IM,
    OT TYPE OF COLUMN ITMAN.OT)
AS
begin
  update ITMAN
  set fm = :fm,
      im = :im,
      ot = :ot
  where (id = :id);
end^



SET TERM ; ^
