Величко В.А. П1-17
Билет 4 Гарантийная мастерская бытовой техники.
Таблицы: 
Производители (код производителя, название), 
Виды техники (код вида, название),
Клиенты (код клиента, фио, адрес),
Категории ремонтов(код категории, название)
Ремонты(код ремонта, код клиента, код вида техники, код категории ремонта, название техники, дата обращения, дата исполнения)
Требуется :
- указать невыполненные ремонты
- построить сравнительную таблицу количества сложных ремонтов по разным производителям

1. По текстовому описанию задачи построить диаграмму прецедентов
файлы диаграммапрецедентов.mdj и диаграммапрецедентов.png

2. По описанию и диаграмме прецедентов построить диаграмму классов
файлы диаграммаклассов.mdj и диаграммаклассов.png

3. Разработать определения классов по диаграмме
файл header.h
4. Разработать проект с классами для выполнения задания
файл exam.cpp
5. Показать отладку одного из модулей при разработке

Отладка модуля класса
Ошибка_1.PNG
После устранения ошибки_1.PNG
Ошибка_2.PNG
После устранения ошибки_2.PNG

6. Подготовить тестовые наборы и провести тестирование одного из модулей
Тест модуля source.cpp
тест 1 картинка Тест_1.png
тест 2 картинка Тест_2.png


7. Определить значение O для одного из методов.Указать значение O для оптимального кода.
функиця printDefaultMenu():
void printDefaultMenu()
{
	system("cls");
	cout << " _________________________________________ " << endl;
	cout << "|         Гарантийная мастерская          |" << endl;
	cout << "|             бытовой техники             |" << endl;
	cout << "|_________________________________________|" << endl;
	cout << "|                                         |" << endl;
	cout << "|   1: Вывести список                     |" << endl;
	cout << "|   2: Невыполненные ремонты              |" << endl;
	cout << "|   3: Сравнение                          |" << endl;
	cout << "|_________________________________________|" << endl;
	cout << "|                                         |" << endl;
	cout << "|   Esc: Выход                            |" << endl;
	cout << "|_________________________________________|" << endl << endl;
}
Данный метод выполняет работу за O(n) и не требует оптимизации, для оптимального кода будет O(n).
