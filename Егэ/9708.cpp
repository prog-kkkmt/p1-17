/*
Последовательность натуральных чисел характеризуется числом Х — наибольшим числом, кратным 14 и
являющимся произведением двух элементов последовательности с различными номерами.
Вам предлагаются два задания, связанные с этой задачей: задание А и задание Б. Вы можете решать оба
задания А и Б или одно из них по своему выбору.
Итоговая оценка выставляется как максимальная из оценок за задания А и Б. Если решение
одного из заданий не представлено, то считается, что оценка за это задание составляет 0 баллов.
Задание Б является усложненным вариантом задания А, оно содержит дополнительные требования к программе.
А. Напишите на любом языке программирования программу для решения поставленной задачи, в которой входные данные будут
запоминаться в массиве, после чего будут проверены все возможные пары элементов.
Перед программой укажите версию языка программирования. Обязательно укажите, что программа является решением задания А.
Максимальная оценка за выполнение задания А – 2 балла.
Б. Напишите программу для решения поставленной задачи, которая будет эффективна как по
времени, так и по памяти (или хотя бы по одной из этих характеристик).
Программа считается эффективной по времени, если время работы программы пропорционально
количеству элементов последовательности N, т.е. при увеличении N в k раз время
работы программы должно увеличиваться не более чем в k раз.
Обязательно укажите, что программа является решением задания Б.
Перед текстом программы кратко опишите используемый Вами алгоритм решения.
На вход программе в первой строке подаётся количество чисел N. В каждой из
последующих N строк записано одно натуральное число, не превышающее 1000.
Пример входных данных:
5
40
1000
7
28
55
Пример выходных данных для приведённого выше примера входных данных:
28000
*/

#include <iostream>

using namespace std;

int main()
{
    int max = 0;
    int n;///Количество чисел
    cin >> n;
    int a[n], i, j;
    for (i = 0; i < n; ++i)
    {
        cin >> a[i];
        for (j = 0; j < i; ++j)
        if ((((a[i] * a[j]) % 14) == 0) && ((a[i] * a[j]) > max))
            max = a[i] * a[j];
    }
    cout << max;
    return 0;
}
